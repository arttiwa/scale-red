[
    {
        "id": "6f0b3b8767fe8d76",
        "type": "tab",
        "label": "scale-sim",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5a728db781912b38",
        "type": "function",
        "z": "6f0b3b8767fe8d76",
        "name": "Generate Weight Data",
        "func": "if (!context.weight) {\n    context.weight = 0;\n    context.increaseRate = Math.floor(Math.random() * 10);\n}\n\nconst maxWeight = 100.0;\nconst incrementThreshold = 100.0;\n\ncontext.weight += context.increaseRate;\n\nif (context.weight >= incrementThreshold) {\n    context.increaseRate = Math.random() * 0.5 + 0.1;\n    context.weight = 0;\n}\n\nconst weight = Math.min(context.weight, maxWeight);\n\nconst payload = `PT,GS      ${weight.toFixed(2)},kg`;\n\nmsg.payload = payload;\nmsg.weight = weight;\nmsg.topic = \"function\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 40,
        "wires": [
            [
                "28dfbba5d048b17e"
            ]
        ]
    },
    {
        "id": "1a8155d9a8021f57",
        "type": "function",
        "z": "6f0b3b8767fe8d76",
        "name": "Hold and Compare Data",
        "func": "if (!context.apiData) {\n    context.apiData = null;\n    context.countT = null;\n    context.wtt = null;\n    context.statework = null;\n}\n\nif (msg.topic === 'api') {\n    context.apiData = msg.target;\n    context.countT = 0;\n    console.log(context.apiData);\n    context.statework = null;\n    return null;\n} else if (msg.topic === 'function') {\n    var functionData = msg.weight;\n    if (functionData < 5) {\n        context.countT = 0;\n        return {\n            payload: `weighting: ${functionData} `,\n            topic: 'less than 5'\n        };\n    }\n\n\n    if (context.apiData) {\n        var apiData = context.apiData;\n        var countT = context.countT;\n        var wttO = context.wtt;\n        var comparisonResult;\n        var apapi = null;\n        var statework = context.statework;\n\n        if (statework == \"sending\"){\n            console.log(\"statework == sending\");\n            msg.workStatus = \"wait\";\n            return\n        }\n\n        var diff = Math.abs((apiData.wt * 100) - (functionData * 100));\n        if (diff <= (apiData.percentAcc * 100)) {\n            // Green\n            comparisonResult = `Match! API Data: ${apiData.wt}, Function Data: ${functionData}`;\n\n            if (countT >= 5) {\n                apapi = apiData;\n                msg.payload = {\n                    functionData: functionData,\n                    comparisonResult: comparisonResult\n                };\n                // msg.topic = 'send';\n                context.statework = \"sending\";\n                console.log(context.statework);\n                msg.workStatus = \"sending\";\n                msg.apapi = apapi;\n\n                // Reset context to wait for new API data\n                // context.apiData = null;\n                // context.countT = null;\n                // context.wtt = null;\n\n                return msg;\n            } else {\n                var diffT = null;\n                var diffA = null;\n                var notinoti = null;\n                var accacc = null;\n                \n                if (context.wtt) {\n                    diffT = Math.abs((context.wtt * 100) - (functionData * 100));\n                    diffA = Math.abs((context.wtt * 100) - (apiData.wt * 100));\n\n                    console.log(\"T T T context.wtt\")\n                } else {\n                    console.log(\"X X X context.wtt\")\n                }\n\n\n\n\n\n                if (context.countT == 0) {\n                    context.countT++;\n                    context.wtt = functionData;\n                    console.log(\"first count\\n\")\n                } else if (context.countT > 0 && diffT, diffA != null ) {\n                    //can acc changed\n                    console.log(\" diffT <= 0.5\\n\", diffT)\n                    context.wtt = functionData;\n                    context.countT++;\n\n\n                } else if (context.countT > 0 && diffT, diffA != null ) {\n                    //over acc changed\n                    console.log(\" diffT > 0.5\\n\", diffT)\n                    context.wtt = functionData;\n                    context.countT = 0;\n\n\n                } else {\n                    console.log(\"tf\", diffT)\n                }\n            }\n            console.log(\"countT == >\", countT, \"\\n\\n\\n\\n\\n\")\n\n        } else if (diff <= (apiData.percentNoti * 100)) {\n            // Orange\n            comparisonResult = `Becareful! API Data: ${apiData.wt}, Function Data: ${functionData}`;\n            context.countT = 0;\n        } else {\n            // Red\n            comparisonResult = `No Match. API Data: ${apiData.wt}, Function Data: ${functionData}`;\n            context.countT = 0;\n        }\n\n\n        msg.payload = {\n            apiData: apiData,\n            functionData: functionData,\n            comparisonResult: comparisonResult\n        };\n        return msg;\n    } else {\n        context.statework = \"req\";\n        return {\n            payload: `Function Data: ${functionData} \\ncontext.apiData NO DATA`,\n            workStatus: 'req'\n        };\n    }\n}\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 420,
        "wires": [
            [
                "c9f66dba8c4371f7",
                "3f818a5805459ef8"
            ]
        ]
    },
    {
        "id": "b8f50909506060e2",
        "type": "inject",
        "z": "6f0b3b8767fe8d76",
        "name": "Every 1 Second",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "x": 490,
        "y": 40,
        "wires": [
            [
                "5a728db781912b38"
            ]
        ]
    },
    {
        "id": "c9f66dba8c4371f7",
        "type": "debug",
        "z": "6f0b3b8767fe8d76",
        "name": "Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 460,
        "wires": []
    },
    {
        "id": "3f818a5805459ef8",
        "type": "switch",
        "z": "6f0b3b8767fe8d76",
        "name": "trigger",
        "property": "workStatus",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "req",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sending",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 360,
        "wires": [
            [
                "b4e79ca9dc636aec"
            ],
            [
                "054d2a0d86b02455"
            ]
        ]
    },
    {
        "id": "6feceead283a6cdb",
        "type": "inject",
        "z": "6f0b3b8767fe8d76",
        "name": "TriggerAPI",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 160,
        "y": 320,
        "wires": [
            [
                "b4e79ca9dc636aec"
            ]
        ]
    },
    {
        "id": "e8eec6eddcbfad8c",
        "type": "http request",
        "z": "6f0b3b8767fe8d76",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://htt------pbin.org/post",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "data",
                "valueType": "msg",
                "valueValue": "weight"
            }
        ],
        "x": 1630,
        "y": 60,
        "wires": [
            [
                "f26e970237d10260"
            ]
        ]
    },
    {
        "id": "28dfbba5d048b17e",
        "type": "debug",
        "z": "6f0b3b8767fe8d76",
        "name": "Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 80,
        "wires": []
    },
    {
        "id": "e8d998b71db3e42e",
        "type": "inject",
        "z": "6f0b3b8767fe8d76",
        "name": "119",
        "props": [
            {
                "p": "weight",
                "v": "119",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "function",
        "x": 150,
        "y": 400,
        "wires": [
            [
                "1a8155d9a8021f57",
                "9bf56f1c7b1844be"
            ]
        ]
    },
    {
        "id": "66628043b381bafc",
        "type": "inject",
        "z": "6f0b3b8767fe8d76",
        "name": "200",
        "props": [
            {
                "p": "weight",
                "v": "200",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "function",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "1a8155d9a8021f57",
                "9bf56f1c7b1844be"
            ]
        ]
    },
    {
        "id": "19b72638eb64062d",
        "type": "inject",
        "z": "6f0b3b8767fe8d76",
        "name": "56.3",
        "props": [
            {
                "p": "weight",
                "v": "56.3",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "function",
        "x": 150,
        "y": 480,
        "wires": [
            [
                "1a8155d9a8021f57",
                "9bf56f1c7b1844be"
            ]
        ]
    },
    {
        "id": "2e0cb7e9771dd5cd",
        "type": "inject",
        "z": "6f0b3b8767fe8d76",
        "name": "50",
        "props": [
            {
                "p": "weight",
                "v": "90",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "function",
        "x": 150,
        "y": 520,
        "wires": [
            [
                "1a8155d9a8021f57",
                "9bf56f1c7b1844be"
            ]
        ]
    },
    {
        "id": "e93a5a6addcdb986",
        "type": "inject",
        "z": "6f0b3b8767fe8d76",
        "name": "2",
        "props": [
            {
                "p": "weight",
                "v": "2",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "function",
        "x": 150,
        "y": 560,
        "wires": [
            [
                "1a8155d9a8021f57",
                "9bf56f1c7b1844be"
            ]
        ]
    },
    {
        "id": "9fe34461721cf421",
        "type": "http request",
        "z": "6f0b3b8767fe8d76",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "",
                "valueType": "other",
                "valueValue": ""
            }
        ],
        "x": 1290,
        "y": 40,
        "wires": [
            [
                "d2bdd69945482787"
            ]
        ]
    },
    {
        "id": "6fe065d12587f1b1",
        "type": "change",
        "z": "6f0b3b8767fe8d76",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "https://catfact.ninja/fact",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 40,
        "wires": [
            [
                "9fe34461721cf421"
            ]
        ]
    },
    {
        "id": "d2bdd69945482787",
        "type": "debug",
        "z": "6f0b3b8767fe8d76",
        "name": "Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 40,
        "wires": []
    },
    {
        "id": "b51accb7b0d0e9b1",
        "type": "inject",
        "z": "6f0b3b8767fe8d76",
        "name": "TriggerAPI",
        "props": [
            {
                "p": "target.wt",
                "v": "0.00",
                "vt": "num"
            },
            {
                "p": "target.percentNoti",
                "v": "0.00",
                "vt": "num"
            },
            {
                "p": "target.percentAcc",
                "v": "0.00",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 940,
        "y": 40,
        "wires": [
            [
                "6fe065d12587f1b1"
            ]
        ]
    },
    {
        "id": "e9d56392831c59f8",
        "type": "debug",
        "z": "6f0b3b8767fe8d76",
        "name": "Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1970,
        "y": 60,
        "wires": []
    },
    {
        "id": "f26e970237d10260",
        "type": "switch",
        "z": "6f0b3b8767fe8d76",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "200",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1790,
        "y": 60,
        "wires": [
            [
                "e9d56392831c59f8"
            ],
            [
                "e9d56392831c59f8"
            ]
        ]
    },
    {
        "id": "3e306531d42490d5",
        "type": "comment",
        "z": "6f0b3b8767fe8d76",
        "name": "continue",
        "info": "after post or put \n    then ck statusCode if 200 \n    then recall api\n\nif Err \n    then noti \n    then check connect \n    by cal some 3 api \n\n    if network is ok\n        == api fail  contact admin\n    \n    if network is bad \n        == network is down\n        try to reconnect\n\n        if can reconnect \n            OK\n    \n\nhttps://inno-cons-gateway-2024-scale-commu-76f8pc8u.uc.gateway.dev/data?id=1&key=AIzaSyCuqyy0SqMJJXixIi_Nv9awd1EGHp8Mbsg\n",
        "x": 1800,
        "y": 20,
        "wires": []
    },
    {
        "id": "b4e79ca9dc636aec",
        "type": "http request",
        "z": "6f0b3b8767fe8d76",
        "name": "api-->1",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://inno-cons-gateway-2024-scale-commu-76f8pc8u.uc.gateway.dev/data-scale-all?scale=1&key=AIzaSyCuqyy0SqMJJXixIi_Nv9awd1EGHp8Mbsg",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 320,
        "y": 360,
        "wires": [
            [
                "d6f3305d4f76616b",
                "f20ecec74441112b"
            ]
        ]
    },
    {
        "id": "d6f3305d4f76616b",
        "type": "function",
        "z": "6f0b3b8767fe8d76",
        "name": "getData",
        "func": "let obj = JSON.parse(msg.payload)[0];\nmsg.apiData = obj;\nmsg.workStatus = \"working\";\nif (!obj) {\n    msg.topic = \"nowork\";\n    msg.ledstatus = \"9999\"\n    return msg\n}\n\nlet w = obj.amount;\nlet no = obj.per_noti ? obj.per_noti : 80;\nlet acc = obj.per_acc ? obj.per_acc: 5;\n\nlet calNo = 0;\nlet calAcc = 0;\nif (msg.payload) {\n    calNo = w - Math.ceil((no / 100) * w);\n    calAcc = Math.ceil((acc / 100) * w);\n\n    msg.target = {\n        id_work: obj.id,\n        id_scale: obj.id_scale_wait,\n        station_id: obj.station_id,\n        wt: w,\n        percentNoti: calNo,\n        percentAcc: calAcc\n    };\n\n    msg.payload = \"\";\n    msg.topic = \"api\";\n    msg.ledstatus = \"1111\"\n\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 360,
        "wires": [
            [
                "2f1450b3e3fc4985"
            ]
        ]
    },
    {
        "id": "f20ecec74441112b",
        "type": "debug",
        "z": "6f0b3b8767fe8d76",
        "name": "Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 280,
        "wires": []
    },
    {
        "id": "9dc1c594f4ad2c56",
        "type": "debug",
        "z": "6f0b3b8767fe8d76",
        "name": "NO NO led nowork",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 140,
        "wires": []
    },
    {
        "id": "054d2a0d86b02455",
        "type": "function",
        "z": "6f0b3b8767fe8d76",
        "name": "Construct URL",
        "func": "const apiKey = 'AIzaSyCuqyy0SqMJJXixIi_Nv9awd1EGHp8Mbsg';\nconst baseUrl = 'https://inno-cons-gateway-2024-scale-commu-76f8pc8u.uc.gateway.dev/data-scale-today';\nconst id_work = msg.apapi.id_work;\nconst weight = msg.weight;\nconst scale = msg.apapi.id_scale;\n\nif (id_work && weight && scale) {\n    msg.url = `${baseUrl}?work=${id_work}&weight=${weight}&scale=${scale}&key=${apiKey}`;\n} else {\n    return null;\n}\n\n// if (msg.workStatus == \"sending\") {\n//     console.log(msg.workStatus);\n//     return null;\n// }\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 380,
        "wires": [
            [
                "b46928fce782b9a9"
            ]
        ]
    },
    {
        "id": "b46928fce782b9a9",
        "type": "http request",
        "z": "6f0b3b8767fe8d76",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{url}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1270,
        "y": 380,
        "wires": [
            [
                "0a2d8b632312acfe",
                "45a4a4894eee5d7e"
            ]
        ]
    },
    {
        "id": "ab574f9ba42ebf1b",
        "type": "debug",
        "z": "6f0b3b8767fe8d76",
        "name": "Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 440,
        "wires": []
    },
    {
        "id": "2f1450b3e3fc4985",
        "type": "switch",
        "z": "6f0b3b8767fe8d76",
        "name": "check",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "api",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nowork",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 320,
        "wires": [
            [
                "1a8155d9a8021f57",
                "f7ff3893e69b8fd0"
            ],
            [
                "9dc1c594f4ad2c56",
                "a9cd061225d89ab9"
            ]
        ]
    },
    {
        "id": "0a2d8b632312acfe",
        "type": "function",
        "z": "6f0b3b8767fe8d76",
        "name": "led status",
        "func": "let obj = JSON.parse(msg.payload);\n\n// Extract the message string\nlet messageString = obj.message;\n\n// Split the message string to extract useful information\nlet matches = messageString.match(/\\d+/g);\nlet messageDetails = {\n    rowsMatched: parseInt(matches[0], 10),\n    rowsChanged: parseInt(matches[1], 10),\n    warnings: parseInt(matches[2], 10)\n};\n\n// Construct the response object\nmsg.response = {\n    ...obj,\n    message: messageDetails\n};\n\nmsg.payload = \"\";\n\n\nif (msg.response.changedRows == 1 && msg.response.message.rowsMatched == 1 && msg.response.message.rowsChanged == 1) {\n    msg.ledstatus = \"1111\";\n\n} else if (msg.response.changedRows !== 1) {\n    msg.ledstatus = \"0000\";\n\n} else if (msg.response.message.rowsMatched !== 1) {\n    msg.ledstatus = \"0001\";\n\n} else if (msg.response.message.rowsChanged !== 1) {\n    msg.ledstatus = \"0010\";\n\n} else {\n    msg.ledstatus = \"????\";\n}\n\ncontext.apiData = null;\ncontext.countT = null;\ncontext.wtt = null;\ncontext.statework = null;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 380,
        "wires": [
            [
                "ab574f9ba42ebf1b",
                "ecbb7021280f5516"
            ]
        ]
    },
    {
        "id": "45a4a4894eee5d7e",
        "type": "debug",
        "z": "6f0b3b8767fe8d76",
        "name": "Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 440,
        "wires": []
    },
    {
        "id": "ecbb7021280f5516",
        "type": "switch",
        "z": "6f0b3b8767fe8d76",
        "name": "",
        "property": "ledstatus",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1111",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0000",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0001",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0010",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "????",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1590,
        "y": 360,
        "wires": [
            [
                "3e0c3ae647ac0bb5"
            ],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "f7ff3893e69b8fd0",
        "type": "debug",
        "z": "6f0b3b8767fe8d76",
        "name": "led api red",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 280,
        "wires": []
    },
    {
        "id": "0c5dfd1872f107f6",
        "type": "rpi-gpio out",
        "z": "6f0b3b8767fe8d76",
        "name": "",
        "pin": "5",
        "set": true,
        "level": "1",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 420,
        "y": 240,
        "wires": []
    },
    {
        "id": "ea93a881c4bd6141",
        "type": "rpi-gpio out",
        "z": "6f0b3b8767fe8d76",
        "name": "",
        "pin": "6",
        "set": true,
        "level": "1",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 440,
        "y": 200,
        "wires": []
    },
    {
        "id": "8fa6d5aeab42ade0",
        "type": "rpi-gpio out",
        "z": "6f0b3b8767fe8d76",
        "name": "",
        "pin": "13",
        "set": true,
        "level": "1",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 460,
        "y": 160,
        "wires": []
    },
    {
        "id": "3e0c3ae647ac0bb5",
        "type": "delay",
        "z": "6f0b3b8767fe8d76",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1140,
        "y": 320,
        "wires": [
            [
                "b4e79ca9dc636aec"
            ]
        ]
    },
    {
        "id": "a9cd061225d89ab9",
        "type": "delay",
        "z": "6f0b3b8767fe8d76",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 180,
        "wires": [
            [
                "b4e79ca9dc636aec"
            ]
        ]
    },
    {
        "id": "9bf56f1c7b1844be",
        "type": "delay",
        "z": "6f0b3b8767fe8d76",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 680,
        "y": 520,
        "wires": [
            [
                "abe6ee1304cfbe47"
            ]
        ]
    },
    {
        "id": "abe6ee1304cfbe47",
        "type": "rpi-gpio out",
        "z": "6f0b3b8767fe8d76",
        "name": "",
        "pin": "13",
        "set": "",
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 840,
        "y": 540,
        "wires": []
    },
    {
        "id": "f760db35b263ad0c",
        "type": "trigger",
        "z": "6f0b3b8767fe8d76",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 680,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "inject-node-id",
        "type": "inject",
        "z": "6f0b3b8767fe8d76",
        "name": "Simulate Data",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 370,
        "y": 720,
        "wires": [
            [
                "26f8dedb53b6194a"
            ]
        ]
    },
    {
        "id": "rpi-gpio-node-id",
        "type": "rpi-gpio out",
        "z": "6f0b3b8767fe8d76",
        "name": "",
        "pin": "5",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 980,
        "y": 720,
        "wires": []
    },
    {
        "id": "884729e9ad87ce02",
        "type": "debug",
        "z": "6f0b3b8767fe8d76",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 800,
        "wires": []
    },
    {
        "id": "69600748d6ee0974",
        "type": "debug",
        "z": "6f0b3b8767fe8d76",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 820,
        "wires": []
    },
    {
        "id": "26f8dedb53b6194a",
        "type": "trigger",
        "z": "6f0b3b8767fe8d76",
        "name": "WatchDog",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "date",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 790,
        "y": 720,
        "wires": [
            [
                "rpi-gpio-node-id",
                "69600748d6ee0974"
            ]
        ]
    }
]
